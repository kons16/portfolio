{"version":3,"sources":["components/Top.js","components/Navbar.js","components/Intern.js","components/Works.js","components/Skills.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Top","src","process","id","alt","href","target","rel","React","Component","Navbar","to","Intern","Works","console","log","Skills","About","App","className","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1ed9b44.chunk.js","sourcesContent":["import React from 'react';\n\nclass Top extends React.Component {\n  render() {\n    return (\n      <div>\n        <img src={`${process.env.PUBLIC_URL}/manbo.jpg`} id=\"mylogo\" alt=\"my-icon\"/>\n        <h1 id=\"myname\">\n          Kono Shinji\n          <a href=\"https://github.com/kons16\" target=\"_blank\" rel=\"noreferrer noopener\">\n            <img src={`${process.env.PUBLIC_URL}/octcat64.png`} id=\"github-icon\" alt=\"github-icon\"/>\n          </a>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Top;\n","import React from 'react';\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div>\n        <div id=\"navbar-box\">\n          <Link to=\"/portfolio/About\" id=\"nav-link\">About</Link>\n          <Link to=\"/portfolio/Skills\" id=\"nav-link\">Skills</Link>\n          <Link to=\"/portfolio/Works\" id=\"nav-link\">Works</Link>\n          <Link to=\"/portfolio/Intern\" id=\"nav-link\">Intern</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nclass Intern extends React.Component {\n  render() {\n    return (\n      <div>\n        <div id=\"experiment-box\">\n          <div id=\"experiment\">\n            <ul id=\"experiment-ul\">\n              <a id=\"experiment-li-day\">2019年4月〜6月</a>\n              <a id=\"experiment-li-company\">株式会社ユニキャスト 就業型インターン</a>\n              <a id=\"experiment-li\"></a>\n              <a id=\"experiment-li-detail\">\n                C#(ASP.NET)を使った企業受け付けアプリのサーバーサイド開発.\n                Railsを利用したWebサイトの修正.\n              </a>\n              <a id=\"experiment-li-day\">2019年5月</a>\n              <a id=\"experiment-li-company\">株式会社ミクシィ git challenge #11</a>\n              <a id=\"experiment-li\"></a>\n              <a id=\"experiment-li-detail\">\n                gitに関連する問題を解いていく競技型のイベントに参加しました.\n              </a>\n              <a id=\"experiment-li-day\">2019年9月</a>\n              <a id=\"experiment-li-company\">フューチャー株式会社 EngineerCamp</a>\n              <a id=\"experiment-li\"></a>\n              <a id=\"experiment-li-detail-last\">\n                フロントはJavaScript, サーバーサイドはJava(SpringBoot,uroboroSQL)を利用したWebアプリの開発.\n              </a>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Intern;\n","import React from 'react';\n\nclass Works extends React.Component {\n  componentDidUpdate(){\n    console.log(\"aa\");\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"works-box\">\n          <div id=\"works\">\n            <ul id=\"works-ul\">\n              <div id=\"works-li\"></div>\n\n              <div id=\"works-li-title\">Concierge</div>\n              <div id=\"works-li-icon\">\n                <img src={`${process.env.PUBLIC_URL}/concierge.png`} id=\"works-icon\" alt=\"works-icon\" />\n              </div>\n              <div id=\"works-li-detail\">\n                会話を続けるためのコツは「深堀り」と「質問」が大切だと言われています.\n                このConcierge(コンシェルジュ)は1対1のチャットアプリに自動で質問生成を行う機能がついているため,\n                会話を簡単に続けることができます.\n                <a href=\"https://github.com/kons16/Concierge\" target=\"_blank\" rel=\"noreferrer noopener\">[GitHub]</a>\n              </div>\n              <div id=\"works-li\"></div>\n              <div id=\"works-li-use\">\n                使用した技術: Ruby on Rails, Flask, MySQL, EC2, S3\n             </div>\n              <div id=\"works-li\"></div>\n\n              <div id=\"works-li-title\">ClassDeru</div>\n              <div id=\"works-li-icon\">\n                <img src={`${process.env.PUBLIC_URL}/classderu.png`} id=\"works-icon\" alt=\"works-icon\" />\n              </div>\n              <div id=\"works-li-detail\">\n                ClassDeru(クラスデル)は大学の授業における出席を簡単に取ることのできるWebアプリです.\n                学生が1クリックで授業に出席でき, 教員の方は誰が出席しているのか画面上で確認できる他, \n                CSVで出席者一覧をダウンロードできます. <br />\n                <a href=\"https://github.com/kons16/ClassDeru\" target=\"_blank\" rel=\"noreferrer noopener\">[GitHub]</a>\n              </div>\n              <div id=\"works-li\"></div>\n              <div id=\"works-li-use\">\n                使用した技術: Laravel, SQLite\n              </div>\n              <div id=\"works-li\"></div>\n\n              <div id=\"works-li-title\">アンケートアプリ</div>\n              <div id=\"works-li-icon\">\n                <img src={`${process.env.PUBLIC_URL}/q-kekka.png`} id=\"works-icon\" alt=\"works-icon\" />\n              </div>\n              <div id=\"works-li-detail\">\n                Reactの勉強のために作成したアンケートアプリです. 誰でもアンケートの作成・回答が可能で,\n                アンケート結果の保存とホスティングにFirebaseを利用しています. <br />\n                <a href=\"https://github.com/kons16/questionnaire\" target=\"_blank\" rel=\"noreferrer noopener\">[GitHub]</a>\n              </div>\n              <div id=\"works-li\"></div>\n              <div id=\"works-li-use\">\n                使用した技術: React, Firebase(Firestore, Hosting)\n              </div>\n              <div id=\"works-li-icon\"></div>\n\n              <div id=\"works-li-title\">ポートフォリオ</div>\n              <div id=\"works-li\"></div>\n              <div id=\"works-li-detail\">\n                このサイトです.<br />Reactを使用しています.\n                <a href=\"https://github.com/kons16/portfolio\" target=\"_blank\" rel=\"noreferrer noopener\">[GitHub]</a>\n              </div>\n              <div id=\"works-li\"></div>\n              <div id=\"works-li-use-last\">\n                使用した技術: React\n              </div>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Works;\n","import React from 'react';\n\nclass Skills extends React.Component {\n  render() {\n    return (\n      <div>\n        <div id=\"skill-box\">\n          <div id=\"skills\">\n            <ul id=\"skills-ul\">\n              <li id=\"skills-li\">Python</li>\n              <li id=\"skills-li\">Ruby</li>\n              <li id=\"skills-li\">JavaScript</li>\n              <li id=\"skills-li\">Java</li>\n            </ul>\n            <ul id=\"skills-ul\">\n              <li id=\"skills-li\">Ruby on Rails</li>\n              <li id=\"skills-li\">React</li>\n            </ul>\n            <ul id=\"skills-ul-bottom\">\n              <li id=\"skills-li\">AWS(EC2, S3)</li>\n              <li id=\"skills-li\">Firebase<br/>(Firestore, Hosting)</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React from 'react';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div>\n        <div id=\"about-box\">\n          <div id=\"about-detail\">\n            <p>\n              茨城大学工学部情報工学科の4年生です。<br />\n              研究では自然言語処理における短単位からの単語生成をテーマにしています。<br />\n              個人の勉強としてはWeb開発に興味があるため、Railsなどのフレームワークを用いて<br/>\n              Webアプリの開発を行っています。<br/><br/>\n\n              今までPythonを一番多くの機会(研究/趣味)で使用していますが、<br/>\n              Web開発ではRubyやJavaScriptを用いることが多いです。<br/><br/>\n\n              インターンでは大学で学ぶことのできないWeb開発を中心に、<br/>\n              フロント/バックエンド の知識を習得したいと考えています。\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Top from './components/Top';\nimport Navbar from './components/Navbar';\nimport Intern from './components/Intern';\nimport Works from './components/Works';\nimport Skills from './components/Skills';\nimport About from './components/About';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Top />\n            <Navbar />\n            <Route path='/Intern' component={Intern}/>\n            <Route path='/Works' component={Works}/>\n            <Route path='/Skills' component={Skills}/>\n            <Route path='/About' component={About}/>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}